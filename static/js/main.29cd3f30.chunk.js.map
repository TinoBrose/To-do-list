{"version":3,"sources":["components/Form.js","components/Todo.js","components/TodoList.js","components/Header.js","pages/About.js","components/Footer.js","App.js","reportWebVitals.js","index.js"],"names":["Form","setInputText","todos","setTodos","inputText","setStatus","inputWho","setInputWho","Row","Col","md","value","onChange","e","target","type","placeholder","onClick","preventDefault","length","who","text","completed","id","Math","random","className","name","Todo","todo","Container","xs","map","item","filter","el","TodoList","filteredTodos","Header","activeStyle","color","to","About","Footer","Date","getFullYear","App","useState","status","setFilteredTodos","useEffect","getLocalTodos","filterHandler","saveLocalTodos","localStorage","setItem","JSON","stringify","getItem","todoLocal","parse","path","from","reportWebVitals","onPerfEntry","Function","then","getCLS","getFID","getFCP","getLCP","getTTFB","ReactDOM","render","StrictMode","document","getElementById"],"mappings":"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","file":"static/js/main.29cd3f30.chunk.js","sourcesContent":["import React, { useState } from 'react';\r\nimport Dropdownfilter from './Dropdownfilter';\r\nimport { VscAdd } from 'react-icons/vsc';\r\nimport { Row, Col } from 'reactstrap';\r\n\r\n\r\nimport './Form.css'\r\n\r\n\r\n/*create a variable for the component (Form) and add the props that come from app.js */\r\nconst Form = ({setInputText, todos, setTodos, inputText, setStatus, inputWho, setInputWho}) => {\r\n\r\n  \r\n    /*create a variable with an event for the input field (inputTextHander) --- needs to be added to the submit Button below */\r\n    const inputTextHandler = (e) => { \r\n        setInputText(e.target.value); \r\n    };\r\n\r\n    const inputWhoHandler = (e) => { \r\n        setInputWho(e.target.value); \r\n    };\r\n\r\n    /*create a variable with an event for the submit button (submitTodoHandler) --- needs to be added to the submit Button below */\r\n    const submitTodoHandler = (e) => { \r\n        e.preventDefault(); // e.preventDefault() to prevent browser to refresh after submitting\r\n        if (inputText.length > 0) { \r\n            setTodos(\r\n            [...todos, {\r\n                who: inputWho,\r\n                text: inputText, \r\n                completed: false, \r\n                id: Math.random() * 1000}, \r\n        ])}; // setTodos creates todos with spread todos (...todos means if there were todos before they will get passed aswell) plus new todos with the todo being added, completed (false by default) and a random ID between 1 - 1000\r\n        \r\n        setInputText(\"\"); //to reset the state to \"empty string\" in the form component\r\n        setInputWho(\"\"); //to reset the state to \"empty string\" in the form component\r\n    };\r\n\r\n    /*creat a variable with an event for the filter selector \"all\" (statusHandler)*/\r\n    const statusHandler = (e) => {\r\n        setStatus(e.target.value);\r\n    }\r\n\r\n    return(\r\n        <form>\r\n            <Row>\r\n            <Col md>\r\n                <input value={inputText} onChange={inputTextHandler} type=\"text\" placeholder=\"Add to do here...\"/>\r\n            </Col>\r\n            <Col md>\r\n                <input value={inputWho} onChange={inputWhoHandler} type=\"who\" placeholder=\"Who to do it...\"/>\r\n            </Col>\r\n            <Col md=\"2\">\r\n                <button onClick={submitTodoHandler} type=\"submit\" >\r\n                    <VscAdd />\r\n                </button>\r\n            </Col>\r\n            <Col md=\"auto\">\r\n                <div className=\"select\">\r\n                    <select onChange={statusHandler} name=\"todos\" className=\"filter-todo\">\r\n                        <option value=\"all\">All Todos</option>\r\n                        <option value=\"completed\">Done</option>\r\n                        <option value=\"uncompleted\">Not done</option>\r\n                    </select>\r\n                </div>\r\n            </Col>\r\n            </Row>\r\n        </form>\r\n    );\r\n}\r\n\r\nexport default Form;","import React from 'react';\r\nimport { CgTrash, CgRedo } from 'react-icons/cg';\r\nimport { MdCheck } from 'react-icons/md';\r\nimport { Container, Row, Col } from 'reactstrap';\r\n\r\n\r\n\r\n\r\nimport './Todo.css'\r\n\r\n\r\n\r\n\r\n\r\nconst Todo = ({ text, todo, setTodos, todos, who }) => {\r\n\r\n    //Events\r\n\r\n    const deleteHandler = () => {\r\n        setTodos(todos.filter((el) => el.id !== todo.id));\r\n    }; //add deletHandler function with filter method to delete element id if its not the todo id\r\n\r\n    const completeHandler = () => {\r\n        setTodos(todos.map(item => {\r\n            if(item.id === todo.id) {\r\n                return {\r\n                    ...item, completed: !item.completed\r\n                }\r\n            }\r\n            return item;\r\n        }))\r\n    };\r\n\r\n    return(\r\n        <Container>\r\n        <Row className=\"todo\">\r\n            <Col xs=\"auto\">\r\n            <div>\r\n                <li className={`todo-item ${todo.completed ? \"completed\" : ''}`}>â€¢ {text}</li>\r\n            </div>\r\n            </Col>\r\n            <Col xs=\"auto\">\r\n            <div>\r\n                <li className={`todo-item ${todo.completed ? \"completed\" : ''}`}> {who}</li>\r\n            </div>\r\n            </Col>\r\n            <Col xs=\"2\">\r\n            <div>\r\n                <button onClick={completeHandler} className=\"complete-btn\">\r\n                    <MdCheck className={`todo-item ${todo.completed ? \"display\" : ''}`}/>\r\n                    <CgRedo className={`todo-item ${todo.completed ? '' : 'display'}`}/>\r\n                </button>\r\n                <button onClick={deleteHandler} className=\"trash-btn\">\r\n                    <CgTrash />\r\n                </button>\r\n            </div>\r\n            </Col>\r\n        </Row>\r\n        </Container>\r\n    );\r\n}\r\n\r\nexport default Todo;","import React from 'react';\r\nimport './TodoList.css'\r\nimport { Row, Col } from 'reactstrap';\r\n\r\n\r\n//import component\r\nimport Todo from './Todo';\r\n\r\nconst TodoList = ({ todos, setTodos, filteredTodos }) => {\r\n    return(\r\n        <div className=\"todo-container\">\r\n            <ul className=\"todo-list\"> \r\n                {filteredTodos.map(todo => (\r\n                    <Todo \r\n                        setTodos={setTodos} \r\n                        todos={todos} \r\n                        key={todo.id}\r\n                        todo={todo} \r\n                        text={todo.text}\r\n                        who={todo.who} />\r\n                ))} \r\n            </ul> \r\n        </div>\r\n        /*use map() method on todos to loop through every single todo being rendered*/\r\n    )\r\n}\r\n\r\nexport default TodoList;","import { NavLink } from \"react-router-dom\";\r\nimport React from 'react';\r\nimport { Container, Row, Col } from 'reactstrap';\r\n\r\nfunction Header() {\r\n    return (\r\n        <header>\r\n            <Container>\r\n            <Row className=\"text-center\">\r\n                <Col className=\"text-center\">\r\n                <div className=\"topnav\">\r\n                <NavLink activeStyle={{ color: \"rgb(207, 204, 23)\" }} to=\"/todo-list\">Todo List</NavLink>\r\n                <NavLink activeStyle={{ color: \"rgb(207, 204, 23)\" }} to=\"/about\">About</NavLink>  \r\n            </div>\r\n                </Col>\r\n            </Row>\r\n            </Container>  \r\n        </header>\r\n    )\r\n}\r\n\r\nexport default Header;\r\n","import React from 'react'\r\nimport { Container, Row, Col } from 'reactstrap';\r\n\r\n function About() {\r\n    return (\r\n        <>\r\n        <Container className=\"about\">\r\n           <Row className=\"text-white\">\r\n                <Col md={2}></Col>\r\n                <Col md={8}>\r\n                    <div className=\"text-center\">\r\n                    <p>This is the Group 5 To-do-list Project.</p> \r\n\r\n                    </div>\r\n                </Col>\r\n                <Col md={2}></Col>\r\n            </Row>\r\n        </Container>\r\n        <div className=\"main-about\">\r\n            <div className=\"container\">\r\n            <div className=\"row\">\r\n                {/*col 1 */}\r\n                <div className=\"col\">\r\n                    <h4>TO DO APP</h4>\r\n                    <ul className=\"list-unstyled\">\r\n                        <li>123-456-789</li>\r\n                        <li>Weisskopfstrasse 123,</li>\r\n                        <li>Berlin,Germany.</li>                          \r\n                    </ul>\r\n                </div>\r\n                {/*colum 2*/}\r\n                <div className=\"col\">\r\n                    <h4>Team</h4>\r\n                    <ul className=\"list-unstyled\">\r\n                        <li>Tino Brose</li>\r\n                        <li>Kauser Jaffari</li>\r\n                        <li>Spyridon Kavvadas</li>                          \r\n                    </ul>\r\n                </div>\r\n                {/*colum 3*/}\r\n                <div className=\"col\">\r\n                    <h4>Powered by</h4>\r\n                    <ul className=\"list-unstyled\">\r\n                        <li>React</li>\r\n                        <li>Bootstrap</li>\r\n                        <li>HTML, <span> CSS </span></li>                          \r\n                    </ul>\r\n                </div>\r\n            </div>\r\n            </div>\r\n        </div>          \r\n      </>        \r\n    )\r\n}\r\n\r\n\r\nexport default About;\r\n","import React from 'react'\r\nimport './Footer.css';\r\n\r\n\r\nconst Footer = () => {\r\n    return (\r\n        <div className=\"main-footer\">\r\n            <div className=\"container\"> \r\n                <hr/>\r\n                <div className=\"row\">\r\n                    <p className=\"col-sm\">\r\n                        &copy; {new Date().getFullYear()} TO DO APP INC. | All Rights reserved. | Terms of Usage. | Privacy.\r\n                    </p>\r\n                </div>\r\n            </div>\r\n        </div>\r\n    )\r\n}\r\n\r\nexport default Footer;\r\n\r\n \r\n\r\n","import React, { useState, useEffect } from 'react';\r\nimport './App.css';\r\n//importing components\r\nimport Form from './components/Form';\r\nimport TodoList from './components/TodoList';\r\nimport Header from './components/Header';\r\nimport About from './pages/About';\r\nimport { Switch, Route, Redirect } from \"react-router-dom\";\r\nimport { Container, Row } from 'reactstrap';\r\nimport Footer from './components/Footer';\r\n\r\n\r\nfunction App() {\r\n\r\n  //state variables\r\n  const [inputText, setInputText] = useState(\"\");\r\n  const [inputWho, setInputWho] = useState(\"\");\r\n  const [todos, setTodos] = useState([]);\r\n  const [status, setStatus] = useState('all');\r\n  const [filteredTodos, setFilteredTodos] = useState([]);\r\n\r\n  //useEffect run once the app starts\r\n  useEffect(() => {\r\n    getLocalTodos();\r\n  }, []);\r\n\r\n  //useEffect filterHandler done\r\n  useEffect(() => {\r\n    filterHandler();\r\n    saveLocalTodos();\r\n  }, [todos, status]);\r\n\r\n  \r\n  //use effectfunctions\r\n  const filterHandler = () => {\r\n    switch(status){\r\n      case 'completed':\r\n        setFilteredTodos(todos.filter(todo => todo.completed === true))\r\n        break;\r\n      case 'uncompleted':\r\n        setFilteredTodos(todos.filter(todo => todo.completed === false))\r\n        break;\r\n      default:\r\n        setFilteredTodos(todos)\r\n        break;\r\n    }\r\n  }\r\n\r\n  //Save todos to local storage\r\n  const saveLocalTodos = () => {\r\n    localStorage.setItem('todos', JSON.stringify(todos));\r\n  };\r\n\r\n  //Get todos from local storage\r\n  const getLocalTodos = () => {\r\n    if(localStorage.getItem('todos') === null){\r\n      localStorage.setItem('todos', JSON.stringify([]));\r\n    } else{\r\n      let todoLocal = JSON.parse(localStorage.getItem('todos'));\r\n      setTodos(todoLocal);\r\n    }\r\n  };\r\n\r\n  return (\r\n    <div className=\"App\">\r\n      <Header />\r\n      \r\n        {/* A <Switch> looks through its children <Route>s and\r\n            renders the first one that matches the current URL. */}\r\n        <main>\r\n          <Switch>\r\n            <Route path=\"/about\">\r\n              <About />\r\n            </Route>\r\n            <Route path=\"/todo-list\">\r\n              <Container>\r\n                  <Form \r\n                  inputText={inputText}\r\n                  todos={todos} \r\n                  setTodos={setTodos} \r\n                  setInputText={setInputText}\r\n                  setInputWho={setInputWho}\r\n                  inputWho={inputWho}\r\n                  setStatus={setStatus}\r\n                  />\r\n                  <hr className=\"hr\" />\r\n                  <TodoList \r\n                  setTodos={setTodos} \r\n                  todos={todos}\r\n                  filteredTodos={filteredTodos}\r\n                  />\r\n              </Container>\r\n            </Route>\r\n            <Redirect from=\"/\" to=\"/todo-list\" />\r\n          </Switch>\r\n        </main>\r\n        <Footer/>\r\n      \r\n\r\n    </div>\r\n  );\r\n}\r\n\r\nexport default App;\r\n","const reportWebVitals = onPerfEntry => {\n  if (onPerfEntry && onPerfEntry instanceof Function) {\n    import('web-vitals').then(({ getCLS, getFID, getFCP, getLCP, getTTFB }) => {\n      getCLS(onPerfEntry);\n      getFID(onPerfEntry);\n      getFCP(onPerfEntry);\n      getLCP(onPerfEntry);\n      getTTFB(onPerfEntry);\n    });\n  }\n};\n\nexport default reportWebVitals;\n","import React from 'react';\r\nimport ReactDOM from 'react-dom';\r\nimport './index.css';\r\nimport App from './App';\r\nimport reportWebVitals from './reportWebVitals';\r\nimport {HashRouter as Router} from 'react-router-dom';\r\n\r\nimport 'bootstrap/dist/css/bootstrap.min.css';\r\n\r\nReactDOM.render(\r\n  <React.StrictMode>\r\n    <Router>\r\n    <App />\r\n    </Router>\r\n  </React.StrictMode>,\r\n  document.getElementById('root')\r\n);\r\n\r\n// If you want to start measuring performance in your app, pass a function\r\n// to log results (for example: reportWebVitals(console.log))\r\n// or send to an analytics endpoint. Learn more: https://bit.ly/CRA-vitals\r\nreportWebVitals();\r\n"],"sourceRoot":""}